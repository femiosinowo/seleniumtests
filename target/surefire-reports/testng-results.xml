<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="8184" started-at="2017-02-10T05:50:33Z" finished-at="2017-02-10T05:50:41Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="8184" started-at="2017-02-10T05:50:33Z" finished-at="2017-02-10T05:50:41Z">
      <class name="example.NewTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:example.NewTest@880ec60]" name="beforeTest" is-config="true" duration-ms="2036" started-at="2017-02-10T00:50:33Z" finished-at="2017-02-10T00:50:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="htmlsampleTest0()[pri:0, instance:example.NewTest@880ec60]" name="htmlsampleTest0" duration-ms="5" started-at="2017-02-10T00:50:35Z" finished-at="2017-02-10T00:50:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- htmlsampleTest0 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:example.NewTest@880ec60]" name="getResult" is-config="true" duration-ms="1" started-at="2017-02-10T00:50:35Z" finished-at="2017-02-10T00:50:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=htmlsampleTest0 status=SUCCESS method=NewTest.htmlsampleTest0()[pri:0, instance:example.NewTest@880ec60] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="htmlsampleTest1()[pri:0, instance:example.NewTest@880ec60]" name="htmlsampleTest1" duration-ms="0" started-at="2017-02-10T00:50:35Z" finished-at="2017-02-10T00:50:35Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at example.NewTest.htmlsampleTest1(NewTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- htmlsampleTest1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:example.NewTest@880ec60]" name="getResult" is-config="true" duration-ms="4" started-at="2017-02-10T00:50:35Z" finished-at="2017-02-10T00:50:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=htmlsampleTest1 status=FAILURE method=NewTest.htmlsampleTest1()[pri:0, instance:example.NewTest@880ec60] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="htmlsampleTest2()[pri:0, instance:example.NewTest@880ec60]" name="htmlsampleTest2" duration-ms="0" started-at="2017-02-10T00:50:35Z" finished-at="2017-02-10T00:50:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- htmlsampleTest2 -->
        <test-method status="PASS" signature="testEasy()[pri:0, instance:example.NewTest@880ec60]" name="testEasy" duration-ms="4888" started-at="2017-02-10T00:50:35Z" finished-at="2017-02-10T00:50:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEasy -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:example.NewTest@880ec60]" name="getResult" is-config="true" duration-ms="0" started-at="2017-02-10T00:50:35Z" finished-at="2017-02-10T00:50:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=htmlsampleTest2 status=SUCCESS method=NewTest.htmlsampleTest2()[pri:0, instance:example.NewTest@880ec60] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:example.NewTest@880ec60]" name="afterTest" is-config="true" duration-ms="1233" started-at="2017-02-10T00:50:40Z" finished-at="2017-02-10T00:50:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:example.NewTest@880ec60]" name="getResult" is-config="true" duration-ms="0" started-at="2017-02-10T00:50:40Z" finished-at="2017-02-10T00:50:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEasy status=SUCCESS method=NewTest.testEasy()[pri:0, instance:example.NewTest@880ec60] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- example.NewTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
